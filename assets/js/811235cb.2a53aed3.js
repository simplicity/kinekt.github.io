"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[876],{4202:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"pipelines","title":"Pipelines","description":"At the core of kinekt lies a middleware engine which powers the processing of incoming requests. When a request enters the server, it will be transformed into a context object and then passed through a chain of middlewares. This chain of middlewares is called a pipeline. Every endpoint you create is an individual pipeline.","source":"@site/docs/pipelines.md","sourceDirName":".","slug":"/pipelines","permalink":"/docs/pipelines","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/getting-started"},"next":{"title":"Auto-Generated Clients","permalink":"/docs/auto-generated-clients"}}');var s=i(6070),o=i(5658);const a={sidebar_position:2},r="Pipelines",d={},c=[{value:"Endpoint factories",id:"endpoint-factories",level:2},{value:"Modularity &amp; Opinionatedness",id:"modularity--opinionatedness",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"pipelines",children:"Pipelines"})}),"\n",(0,s.jsx)(n.p,{children:"At the core of kinekt lies a middleware engine which powers the processing of incoming requests. When a request enters the server, it will be transformed into a context object and then passed through a chain of middlewares. This chain of middlewares is called a pipeline. Every endpoint you create is an individual pipeline."}),"\n",(0,s.jsx)(n.p,{children:"Creating a pipeline manually could look something like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-TypeScript",children:"const pipeline = createPipeline(\n  authenticate(params.getSession),\n  cors(params.cors),\n  deserialize(),\n  handleRequest(),\n  serialize(),\n  finalize(),\n  logger({ logger: params.logger })\n);\n"})}),"\n",(0,s.jsx)(n.p,{children:"You would call it like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-TypeScript",children:"const result = await pipeline(context);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The middlewares are executed in the exact order they are defined. Some middlewares depenend on each other. For example, the ",(0,s.jsx)(n.code,{children:"serialize"})," middleware must be present in order for the ",(0,s.jsx)(n.code,{children:"finalize"})," middleware to work."]}),"\n",(0,s.jsx)(n.h2,{id:"endpoint-factories",children:"Endpoint factories"}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, there's a ",(0,s.jsx)(n.code,{children:"handleRequest"})," middleware. This middleware doesn't actually exist in kinekt and is there for illustrative purposes only. This is a middleware you could write yourself in order to reply to a request, for example by setting a body, status code and headers."]}),"\n",(0,s.jsx)(n.p,{children:"It would be daunting to re-write the above code everytime you want to create a new endpoint. This is where endpoint factories come in to the picture."}),"\n",(0,s.jsxs)(n.p,{children:["Kinekt currently provides one endpoint factory: ",(0,s.jsx)(n.code,{children:"createSchematizedEndpointFactory"}),". It allows you to define a pipeline blueprint which can then be cloned for every endpoint you create:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-TypeScript",children:'const app = createSchematizedEndpointFactory(\n  createPipeline(\n    authenticate(getSession),\n    cors(corsOptions),\n    deserialize()\n  ).split(\n    handleValidationErrors(defaultValidationErrorHandler),\n    serialize(),\n    finalize(),\n    logger({ logger: params.logger })\n  )\n)\n\nconst createUser = app.createEndpoint(\n  "POST /users",\n\n  {\n    body: z.object({ email: z.string() }),\n    response: { 201: z.custom<User>(), },\n  },\n\n  async ({ params, query, body }) => {\n    ...\n  }\n)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Note the use of the ",(0,s.jsx)(n.code,{children:".split()"})," call: it means that we're splitting up the pipeline into two parts, which allows ",(0,s.jsx)(n.code,{children:"createSchematizedEndpointFactory"})," to place a custom middleware (called ",(0,s.jsx)(n.code,{children:"schematizedEndpoint"}),") inbetween. This is the middleware which powers the definition of 100% typesafe endpoints by using zod schemas."]}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.code,{children:"app.createEndpoint()"}),", we can now create as many endpoints as we want. Note that, while each endpoint is a stand-alone pipeline, the middleware instances are reused, which means that memory consumption remains low."]}),"\n",(0,s.jsx)(n.h2,{id:"modularity--opinionatedness",children:"Modularity & Opinionatedness"}),"\n",(0,s.jsx)(n.p,{children:"It is important to highlight the aspect of modularity which comes with the pipeline architecture. By using this concept, we're completely free in defining different kinds of endpoints. When building a REST api, we're most likely going to use the schematized endpoints. But we might have special scenarios where we need a request to be routed to a custom processing pipeline. In this case, we can simply create a custom pipeline and perhaps a custom endpoint factory function in order to write more custom processing code."}),"\n",(0,s.jsxs)(n.p,{children:["It is also important to note that kinekt has an unopinionated core: the concept of middlewares and pipelines is very common, easy to understand and simple to implement. Opinionatedness in kinekt arises through custom layers such as the ",(0,s.jsx)(n.code,{children:"createSchematizedEndpointFactory"}),". You are not forced to use that, however. In fact, ",(0,s.jsx)(n.code,{children:"createSchematizedEndpointFactory"})," could be moved to a separate package, and the framework itself would still be perfectly useable."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},5658:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(758);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);